@using System.Reflection;
@using System.ComponentModel.DataAnnotations;
@{
	var props = typeof(BMS.Models.Device.BatteryClusterInfo)
				.GetProperties()
				.Where(p => {
					var displayAttr = p.GetCustomAttribute<DisplayAttribute>();
					return displayAttr == null || displayAttr.GetAutoGenerateField() != false;
				})
				.ToList();


	string ToCamelCase(string name) =>
		string.IsNullOrEmpty(name) ? name :
		char.ToLowerInvariant(name[0]) + name.Substring(1);

}



<div class="row d-flex align-items-stretch pt-3">
	<div class="col-12">
		<div class="card h-100">
			<div class="card-header">
				<div class="row">
					<div class="col-7">
						<h6>统计分析</h6>
					</div>
				</div>
			</div>
			<div class="card-body">
				<div class="row">
					<div class="col-12">
						<table id="table_devices"
							   class="table"
							   data-toggle="table"
							   data-search="true"
							   data-pagination="true"
							   data-side-pagination="server"
							   data-page-size="50"
							   data-page-list="[50,100,200]"
							   data-url="@Url.Action("GetDeviceDetailsPaged", "Home")"
							   data-query-params="queryParams">
							<thead class="table-dark">
								<tr>
									@foreach (var prop in props) {
										var displayAttr = prop.GetCustomAttribute<DisplayAttribute>();
										var displayName = displayAttr?.Name ?? prop.Name;
										<th data-field="@ToCamelCase(prop.Name)" data-formatter="batteryFormatter">@displayName</th>
									}
								</tr>
							</thead>

						</table>
					</div>
				</div>

			</div>
		</div>
	</div>
</div>


@section Scripts{
	<script>
		function queryParams(params) {
			return {
				limit: params.limit,
				offset: params.offset,
				search: params.search,
				sn: "@ViewBag.Sn"
			};
		}

		function batteryFormatter(value) {
			
			if (typeof value === 'number' && !isNaN(value)) {
				
				if (value % 1 !== 0) {  
					return value.toFixed(1);
				}
				return value;  
			}
			return value; 
		}

		function indexFormatter(value, row, index) {
			return index + 1;
		}
	</script>
}