@using System.Reflection;
@using System.ComponentModel.DataAnnotations;
@model List<BMS.Models.Device.BatteryClusterInfo>
@{
    var props = typeof(BMS.Models.Device.BatteryClusterInfo)
                                        .GetProperties()
                                        .Where(p => {
                                            var displayAttr = p.GetCustomAttribute<DisplayAttribute>();
                                            return displayAttr == null || displayAttr.GetAutoGenerateField() != false;
                                        })
                                        .ToList();
}



<div class="row d-flex align-items-stretch pt-3">
    <div class="col-12">
        <div class="card h-100">
            <div class="card-header">
                <div class="row">
                    <div class="col-7">
                        <h6>统计分析</h6>
                    </div>
                </div>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-12">
                        <table id="table_devices" class="table table-responsive"
                               data-toggle="table"
                               data-search="true"
                               data-pagination="true">
                            <thead class="table-dark">
                                <tr>
                                    <th>#</th>
                                    @foreach (var prop in props) {
                                        var displayAttr = prop.GetCustomAttribute<DisplayAttribute>();
                                        var displayName = displayAttr?.Name ?? prop.Name;  // 有中文就显示中文，否则显示属性名

                                        <th>@displayName</th>
                                    }
                                </tr>
                            </thead>
                            <tbody>
                                @for (int i = 0; i < Model.Count; i++) {
                                    var item = Model[i];
                                    <tr>
                                        <td>@(i + 1)</td>
                                        @foreach (var prop in props) {
                                            var value = prop.GetValue(item);
                                            <td>@(value ?? "")</td>
                                        }
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>


